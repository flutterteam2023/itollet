name: itollet
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.1.0 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  animated_snack_bar: ^0.3.1
  another_flutter_splash_screen: ^1.1.5
  auto_route: ^7.8.0
  auto_size_text: ^3.0.0
  awesome_snackbar_content: ^0.1.3
  cached_network_image: ^3.2.3
  cloud_firestore: ^4.9.0
  cupertino_icons: ^1.0.2
  dio: ^5.3.3
  easy_localization: ^3.0.2
  firebase_auth: ^4.8.0
  firebase_core: ^2.15.1
  firebase_storage: ^11.2.6
  flutter:
    sdk: flutter
  flutter_bounceable: ^1.1.0
  flutter_hooks: null
  flutter_image_compress: ^2.0.4
  flutter_screenutil: ^5.8.4
  flutter_svg: ^2.0.7
  freezed_annotation: ^2.4.1
  get_it: ^7.6.0
  hooks_riverpod: ^2.3.6
  image_cropper: ^5.0.0
  image_picker: ^1.0.4
  injectable: ^2.1.2
  json_annotation: ^4.8.1
  logger: ^2.0.2
  multi_value_listenable_builder: ^0.0.2
  url_launcher: ^6.1.14
  uuid: ^3.0.7
  validatorless: ^1.2.3

dev_dependencies:
  auto_route_generator: ^7.2.0
  build_runner: ^2.4.6
  custom_lint: null
  flutter_launcher_icons: ^0.13.1

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0
  flutter_test:
    sdk: flutter
  freezed: ^2.4.1
  injectable_generator: ^2.1.6
  json_serializable: ^6.7.1
  riverpod_lint: ^1.3.2

flutter_launcher_icons:
  android: "launcher_icon"
  ios: true
  image_path: "assets/images/play_store_512.png"
  min_sdk_android: 21 # android min sdk min:16, default 21
  web:
    generate: true
    image_path: "assets/images/play_store_512.png"
# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec
# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/svg/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware
  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages
  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  fonts:
    - family: Poppins Regular
      fonts:
        - asset: assets/fonts/Poppins-Regular.ttf
    - family: Poppins Italic
      fonts:
        - asset: assets/fonts/Poppins-Italic.ttf

    #         style: italic
    - family: Poppins Bold
      fonts:
        - asset: assets/fonts/Poppins-Bold.ttf
    - family: LeagueGothic-Regular
      fonts:
        - asset: assets/fonts/LeagueGothic-Regular.ttf
    - family: Roboto
      fonts:
        - asset: assets/fonts/Roboto-Regular.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
